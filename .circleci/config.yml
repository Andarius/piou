version: 2.1

orbs:
  gh: circleci/github-cli@1.0

executors:
  test-build:
    docker:
      - image: cimg/python:3.9.15

commands:
  run-tests:
    parameters:
      python-version:
        type: string
        description: Name of the image
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-<< parameters.python-version >>-{{ checksum "poetry.lock" }}
      - run:
          name: Install python dependencies
          command: poetry install --all-extras
      - save_cache:
          key: deps-<< parameters.python-version >>-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: Running type checking
          command: poetry run pyright
      - run:
          name: Running lint check
          command: poetry run ruff check .
      - run:
          name: Running black
          command: poetry run black
      - run:
          name: Run tests
          command: |
            poetry run pytest -vv --junitxml=tests/junit.xml
      - run:
          name: Test Example
          command: |
            poetry run coverage run -a -m piou.test.simple -h
            poetry run coverage run -a -m piou.test.simple foo 1 --baz 2
            poetry run coverage run -a -m piou.test -h
            poetry run coverage run -a -m piou.test foo 1 --foo2 foo --foo12 '{"foo": 1, "bar": "baz"}'
            poetry run coverage run -a -m piou.test sub -h
            poetry run coverage run -a -m piou.test foo -h
            poetry run coverage run -a -m piou.test error || true
            poetry run coverage run -a -m piou.test sub foo 1 --foo2 foo
            poetry run coverage run -a -m piou.test.derived -h
            poetry run coverage run -a -m piou.test.derived bar
            poetry run coverage run -a -m piou.test.derived foo --host postgres
            poetry run coverage run -a -m piou.test.derived dynamic --db1 test
      - run:
          name: Generating coverage
          command: |
            poetry run coverage xml -o tests/coverage.xml
            poetry run coverage html
      - store_test_results:
          path: tests/junit.xml
      - store_artifacts:
          path: htmlcov

jobs:

  run-tests-3-9:
    docker:
      - image: cimg/python:3.9.15
    steps:
      - run-tests:
          python-version: "3.9"

  run-tests-3-10:
    docker:
      - image: cimg/python:3.10.8
    steps:
      - run-tests:
          python-version: "3.10"

  run-tests-3-11:
    docker:
      - image: cimg/python:3.11
    steps:
      - run-tests:
          python-version: "3.11"

  bump-version:
    executor: test-build
    steps:
      - gh/setup
      - checkout
      - restore_cache:
          keys:
            - deps-3.9-{{ checksum "poetry.lock" }}
      - run:
          name: Adding github.com to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Create release
          command: bash .circleci/scripts/release.sh
      - store_artifacts:
          path: dist
      - save_cache:
          name: Saving wheel
          key: piou-{{ checksum "pyproject.toml" }}
          paths:
            - dist/

  publish:
    executor: test-build
    steps:
      - checkout
      - restore_cache:
          name: Restore wheel
          keys:
            - piou-{{ checksum "pyproject.toml" }}
      - run:
          name: Publishing
          command: poetry publish -u __token__ -p $PYPI_TOKEN

workflows:

  run-tests:
    jobs:
      - run-tests-3-9:
          filters:
            tags:
              ignore: /.*/
      - run-tests-3-10:
          filters:
            tags:
              ignore: /.*/
      - run-tests-3-11:
          filters:
            tags:
              ignore: /.*/
      - bump-version:
          context: piou-deploy
          requires: [ run-tests-3-9, run-tests-3-10, run-tests-3-11 ]
          filters:
            tags:
              only: /.*/
            branches:
              only: /^master$/

  publish:
    jobs:
      - publish:
          context: piou-deploy
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
